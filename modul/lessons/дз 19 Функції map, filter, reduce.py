# # Завдання 1
# # Напишіть програму, яка дозволяє користувачеві обчислити частку (ділення одного числа на інше) двох чисел.
# # Програма приймає два значення з клавіатури і повертає результат операції на екран. Обробіть виняток, що
# # виникає під час ділення на нуль, і виведіть повідомлення про помилку.
# #
#
# print('Початок програми')
# try:
#     x  = int(input('Enter integer number x = '))
#     y  = int(input('Enter integer number y = '))
#     result = x / y
#
# except ZeroDivisionError as e: # вказуемо назву винятку який ми передбачаемо побачити (помилки)
#     print(f'Ділення на нуль неможливе, {y=}') #виведе зазначене повідомлення
#     print(e, type(e))  # помилки являются обектами, їх можна присвоювати до змінних (except Exception as e)
# except ValueError: # вказуемо назву винятку(помилки)
#     print('Некоректні дані')
# except Exception:  # базовий клас помилок, виконуетьсяв першу чергу, треба ставити в кінець
#     print('Стався Exception')
#
# else: #виконуется коли немае помилок
#     print('Ділення пройшло успішно')
#     print(f'{result=}')
#
# finally: # виконуется в любому випадку
#     print('Кінець програми')

# # Завдання 2
# # Реалізуйте перше завдання через функцію. Функція повинна приймати два параметри і відображати результат ділення на екран.
# # Створіть дві версії реалізації функції:
# # · Перша версія не обробляє виняток усередині функції. Уся обробка знаходиться зовні;
# # · Друга версія обробляє виняток усередині функції.
#
# print('Початок програми') # · Перша версія не обробляє виняток усередині функції. Уся обробка знаходиться зовні;
# def main(x, y):
#     return x/y
#
# try:
#     x  = int(input('Enter integer number x = '))
#     y  = int(input('Enter integer number y = '))
#     result = main(x,y)
#
# except ZeroDivisionError as e: # вказуемо назву винятку який ми передбачаемо побачити (помилки)
#     print(f'Ділення на нуль неможливе, {y=}') #виведе зазначене повідомлення
#     print(e, type(e))  # помилки являются обектами, їх можна присвоювати до змінних (except Exception as e)
# except ValueError: # вказуемо назву винятку(помилки)
#     print('Некоректні дані')
# except Exception:  # базовий клас помилок, виконуетьсяв першу чергу, треба ставити в кінець
#     print('Стався Exception')
#
# else: #виконуется коли немае помилок
#     print('Ділення пройшло успішно')
#     print(f'{result=}')
#
# finally: # виконуется в любому випадку
#     print('Кінець програми')
#
# print('Початок програми')  # · Друга версія обробляє виняток усередині функції.


# def main(x, y):
#     try:
#         result = x / y
#
#     except ZeroDivisionError as e:  # вказуемо назву винятку який ми передбачаемо побачити (помилки)
#         print(f'Ділення на нуль неможливе, {y=}')  # виведе зазначене повідомлення
#     else:
#         print('Ділення пройшло успішно')
#     finally:
#         return result, e
#
#
# try:
#     x = int(input('Enter integer number x = '))
#     y = int(input('Enter integer number y = '))
#     result = main(x, y)
#     print(f'{result = } {e = }')
#
# except ValueError:  # вказуемо назву винятку(помилки)
#     print('Некоректні дані')
# except Exception:  # базовий клас помилок, виконуетьсяв першу чергу, треба ставити в кінець
#     print('Стався Exception')
#
# finally:  # виконуется в любому випадку
#     print('Кінець програми')

# # Завдання 1
# # Напишіть програму, яка запитує в користувача число і обчислює його квадратний корінь. Обробіть виняток, що
# # виникає при введенні від'ємного числа, і виведіть повідомлення про помилку.
#
# from math import sqrt
# try:
#     n = int(input('Введіть число: '))
#     res = sqrt(n)
#     print(f'Корінь від {n} = {round(res, 2)}')
# except ValueError:
#     print("Ви ввели від'ємне число або некоректні дані обчислити корінь неможливо!")

# # Завдання 2
# # Реалізуйте перше завдання через функцію. Функція повинна приймати число як параметр і повертати квадратний
# # корінь числа. Перевірка коректності отриманих даних повинна бути всередині функції. Створіть дві версії реалізації функції:
# # · Перша версія не обробляє виняток всередині функції. Уся обробка знаходиться зовні;
# # · Друга версія обробляє виняток усередині функції.
#
# from math import sqrt
#
# def sqrt(numb):
#     return sqrt(numb)
#
#
# while True:
#     try:
#         numb = int(input('Введіть число: '))
#         if numb == 0:
#             exit('Exit program')
#         if numb < 0:
#             raise ValueError("Ви ввели від'ємне число обчислити корінь неможливо!")
#
#
#         res = sqrt(numb)
#         print(f'Корінь від {numb} = {round(res, 2)}')
#     except Exception:
#         print("Ви ввели некоректні дані обчислити корінь неможливо!")

# Завдання 3
# Напишіть програму, яка дає змогу заповнити користувачеві словник із клавіатури парами "ключ/значення".
# Після отримання даних відобразіть на екрані меню, яке дозволяє виконати такі операції:
# · Відображення словника;
# · Пошук значення в словнику;
# · Заміна значення в словнику. Значення має бути знайдено за ключем;
# · Відображення значення за ключем, введеним користувачем;
# · Видалення значення за ключем, введеним користувачем.
# Обробіть виняток, що виникає під час виходу за межі словника (користувач ввів невірний ключ), і виведіть повідомлення
# про помилку.

# dic = {}
# while True:
#     key = input('Ведіть ключ: ')
#     if not key:
#         break
#
#     value = input("Введіть значення: ")
#     dic[key] = value

# dic = dict([('a', 1), ('b', 2), ('c', 3)])
# print(dic)
# print('Доступні операції: ')
# print('''1. Відображення словника
# 2. Пошук значення в словнику
# 3. Заміна значення в словнику. Значення має бути знайдено за ключем
# 4. Відображення значення за ключем, введеним користувачем
# 5. Видалення значення за ключем, введеним користувачем.''')
# n = int(input('Введіть потрібну Вам операцію: '))

try:
    d = dict([('a', 1), ('b', 2), ('c', 3)])
    print(d['hello'])
except KeyError as e:
    print(f'Ключа {e} неіснуе')



